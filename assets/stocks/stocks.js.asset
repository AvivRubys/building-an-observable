let stockUrl = (stock) => "http://cors.io/?u=" + encodeURIComponent(`http://finance.google.com/finance/info?client=ig&q=${stock}`);
let fetchStockData = (stock) => {
    let url = stockUrl(stock);
    return Observable.fromPromise(() =>
        fetch(url).then(res => res.text())
        .then(txt => ({stock, price:JSON.parse(txt.substr(3))[0].l})));
}

let stocks = new Subject();
                    
let StockLine = ({stock,price})=> (<div>{`${stock}:${price}`}</div>)

let StocksList = stocks
                .startWith(["TLV:T25"])
                .scan((a,b)=> ([...a,b]) )
                .flatMap(allStocks=> {
                    let allStocksPrices = allStocks.map(fetchStockData);
                    return Observable.combineLatest(allStocksPrices, (...stocksPrices)=> 
                    stocksPrices.map(({stock,price})=><StockLine stock={stock} price={price} />))
                });

let App = StocksList.map(stockList=>{
    return (<div>
        {stockList}
        <input type="text" onKeyUp={e=>{
            if (e.keyCode === 13)
            {
                stocks.onNext(e.target.value);
                e.target.value = "";
            }
        }} />
    </div>)
})

let DOMContainer = getAppContainer(context)
App.subscribe(comp => ReactDOM.render(comp, DOMContainer));
