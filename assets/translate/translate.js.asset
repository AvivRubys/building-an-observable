let input = getInputElement(context);
let view = getViewElement(context);

Rx.DOM
  .keyup(input)
  .map(e => e.target.value)
  .subscribe((value) => appendLine(view, value));
  
###
function translateAsync(text){
  let url = getTranslationUrl(text);
  return Observable.fromPromise(
   ()=> fetch(url)
        .then( res=> res.json())
        .then( res=> res.outputs[0].output));
}
###
let input = getInputElement(context);
let view = getViewElement(context);

Rx.DOM
  .keyup(input)
  .map(e => e.target.value)
  .map(text => translateAsync(text))
  .switch()
  .subscribe((value) => appendLine(view, value));
  
###
let input = getInputElement(context);
let view = getViewElement(context);

Rx.DOM
  .keyup(input)
  .map(e => e.target.value)
  .filter(x=> x.length > 2)
  .distinctUntilChanged()
  .map(text => translateAsync(text))
  .switch()
  .subscribe((value) => appendLine(view, value));
###
let input = getInputElement(context);
let view = getViewElement(context);

Rx.DOM
  .keyup(input)
  .map(e => e.target.value)
  .filter(x=> x.length > 2)
  .debounce(300)
  .distinctUntilChanged()
  .map(text => translateAsync(text))
  .switch()
  .subscribe((value) => appendLine(view, value));
